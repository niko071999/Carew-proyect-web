@model SistemaCajaRegistradora.Models.Producto

<div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header">
            @* Condicion que verifica si esta editando o agregando *@
            @if (Model == null)
            {
                <h5 class="modal-title" id="exampleModalLabel">Agregar Producto</h5>
            }
            else
            {
                <h5 class="modal-title" id="exampleModalLabel">Editar Producto</h5>
            }
            <button class="btn-close" type="button" data-bs-dismiss="modal">
            </button>
        </div>
        <div class="modal-body">
            @Html.AntiForgeryToken()
            <div class="row g-2">
                <div class="col-12">
                    @Html.HiddenFor(model => model.id)
                    @Html.HiddenFor(model => model.rutaImg)
                    @Html.HiddenFor(model => model.fecha_creacion)
                    <label id="text_codigo" class="form-label">Codigo de barra</label>
                    <div class="input-group mb-3">
                        @Html.TextBoxFor(model => model.codigo_barra, new
                       {
                           @type = "text",
                           @class = "form-control",
                           @placeholder = "Ingrese codigo de barra",
                           maxlength = 13,
                           aria_describedby = "btnVerificar"
                       })
                        <button class="btn btn-outline-success" type="button" id="btnVerificar">Verificar</button>
                    </div>
                </div>
                <div class="col-6">

                </div>
                <div class="col-6">
                    <label id="text_nombre" class="form-label">Nombre</label>
                    @if (Model == null)
                    {
                        @Html.TextBoxFor(model => model.nombre, new
                        {
                            @type = "text",
                            @class = "form-control",
                            @placeholder = "Ingrese nombre del producto",
                            maxlength = 100,
                            disabled = "disabled"
                        })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.nombre, new
                        {
                            @type = "text",
                            @class = "form-control",
                            @placeholder = "Ingrese nombre del producto",
                            maxlength = 100
                        })
                    }
                </div>
                <div class="col-6">
                    <label id="text_categoria" class="form-label">Categoria</label>
                    @if (Model == null)
                    {
                        @Html.DropDownList("categoriaId", null, "Seleccione categoria",
                        htmlAttributes: new { @class = "form-select", disabled = "disabled" })
                    }
                    else
                    {
                        @Html.DropDownList("categoriaId", null, "Seleccione categoria",
                        htmlAttributes: new { @class = "form-select" })
                    }
                </div>
                <div class="col-6">
                    <label class="form-label">Precio</label>
                    <div class="input-group mb-3">
                        <span class="input-group-text">$</span>
                        @if (Model == null)
                        {
                            @Html.TextBoxFor(model => model.precio, new
                            {
                                @class = "form-control input-number",
                                @placeholder = "Ingrese precio del producto",
                                maxlenght = 9,
                                disabled = "disabled"
                            })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.precio, new
                            {
                                @class = "form-control input-number",
                                @placeholder = "Ingrese precio del producto",
                                maxlenght = 9
                            })
                        }
                    </div>
                </div>
                @if (Model == null)
                {
                    <div class="col-6">
                        <label class="form-label">Stock</label>
                        @Html.TextBoxFor(model => model.stock, new
                       {
                           @class = "form-control input-number",
                           @placeholder = "Ingrese stock del producto",
                           maxlenght = 9,
                           disabled = "disabled"
                       })
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.stock)
                }
                <div class="col-6">
                    <label id="text_prioridad" class="form-label">Prioridad</label>
                    @if (Model == null)
                    {
                        @Html.DropDownList("prioridadId", null, "Seleccione la prioridad",
                        htmlAttributes: new { @class = "form-select", disabled = "disabled" })
                    }
                    else
                    {
                        @Html.DropDownList("prioridadId", null, "Seleccione la prioridad",
                        htmlAttributes: new { @class = "form-select" })
                    }
                </div>
                <div class="col-6">
                    <label class="form-label">Stock minimo y maximo</label>
                    <div class="input-group mb-3">
                        @if (Model == null)
                        {
                            @Html.TextBoxFor(model => model.stockmin, new
                            {
                                @class = "form-control input-number",
                                @placeholder = "Ingrese stock min.",
                                maxlenght = 9,
                                disabled = "disabled"
                            })
                            <span class="input-group-text"> y </span>
                            @Html.TextBoxFor(model => model.stockmax, new
                            {
                                @class = "form-control input-number",
                                @placeholder = "Ingrese stock max.",
                                maxlenght = 9,
                                disabled = "disabled"
                            })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.stockmin, new
                            {
                                @class = "form-control input-number",
                                @placeholder = "Ingrese stock min.",
                                maxlenght = 9
                            })
                            <span class="input-group-text"> - </span>
                            @Html.TextBoxFor(model => model.stockmax, new
                            {
                                @class = "form-control input-number",
                                @placeholder = "Ingrese stock max.",
                                maxlenght = 9
                            })
                        }
                    </div>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <p class="h5 fw-bold">Previsualizacion codigo de barra</p>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <p id="texto_infocodigobarra" class="h6 text-danger">Sin codigo de barra</p>
                    <img id="barcode" />
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-secondary" type="button" data-bs-dismiss="modal">Cancelar</button>
                @if (Model == null)
                {
                    <button id="btnAgregar" class="btn btn-success" onclick="AgregarProducto('@Url.Action("AgregarProducto","Producto")')">Agregar</button>
                }
                else
                {
                    <button id="btnEditar" class="btn btn-warning" onclick="editarProducto('@Url.Action("editarProducto","Producto")')">Editar</button>
                }

            </div>
        </div>
    </div>
</div>

<script type="text/javascript" title="scannerValidation">
    $('#codigo_barra').bind('keyup', function (e) {
        let key = e.keyCode || e.which;
        let codigo = document.getElementById("codigo_barra").value;
        console.log(codigo);
        if (key === 13) {
            if (codigo != '') {
                generarBarcode(codigo);
                verificar(codigo);
            }
        }
    });

    $('#btnVerificar').click(function () {
        let codigo = document.getElementById("codigo_barra").value;
        if (codigo != '') {
            generarBarcode(codigo);
            let existCodigo = true;
            existCodigo = verificar(codigo);
            if (!existCodigo) {
                let mensaje = 'El codigo de barra es el mismo'
                showMenssage('success', mensaje, true);
            }
        }
    });

    function generarBarcode(codigo) {
        try {
            $("#barcode").show();
            JsBarcode("#barcode", codigo, {
                format: "EAN13",
                lastChar: ">",
                width: 3,
            });
            $("#texto_infocodigobarra").hide();
        } catch (e) {
            let mensaje = 'El codigo de barra ingresado no es valido'
            console.error('El codigo de barra no es valido: ' + e);
            $("#barcode").hide();
            $("#texto_infocodigobarra").show();
            showMenssage('error', mensaje, true);
        }
    }

    function verificar(codigo) {
        var codigo = document.getElementById("codigo_barra").value;
        return getDataProduct(codigo);
    }

    function getDataProduct(codigo) {
        var producto = {
            "id": 0,
            "codigo_barra": codigo,
            "nombre": 'test',
            "precio": 0,
            "stock": 1,
            "stockmin": 0,
            "stockmax": 0,
            "fecha_creacion": null,
            "prioridadid": 0,
            "categoriaid": 0,
            "rutaImg": 'test'
        };
        $.post('@Url.Action("addExistencias", "Producto")', producto, function (data) {
            if (data.codigobarra != '') {
                console.log('data.codigobarra !=', data.codigobarra);
                if (data.codigobarra !== sessionStorage.codigobarrainit) {
                    console.log('data.codigobarra == sessionStorage.codigobarrainit ELSE', data.codigobarra.length, sessionStorage.codigobarrainit.length);
                    let mensaje = 'El codigo de barra esta siendo usado por otro producto, ¿Quieres abrir el agregador de existencias?'
                    showMenssage('warning', mensaje, false);
                    sessionStorage.codigo = data.codigobarra;
                    return true;
                } else {
                    return false;
                }
            } else {
                console.log('data.codigobarra != ELSE');
                let mensaje = 'El codigo no esta siendo utilizado por otro producto';
                showMenssage('success', mensaje, true);
                let inputs = [{ nombre: 'codigo_barra' },{ nombre: 'nombre' }, { nombre: 'categoriaId' }, { nombre: 'precio' },
                    { nombre: 'stock' }, { nombre: 'stockmin' }, { nombre: 'stockmax' }, { nombre: 'prioridadId' }]
                for (let i = 0; i < inputs.length; i++) {
                    let input = document.getElementById(inputs[i].nombre);
                    if (i != 0) {
                        input.disabled = false;
                    } else {
                        let btn_verificar = document.getElementById('btnVerificar');
                        btn_verificar.disabled = true;
                        input.disabled = true;
                    }                    
                }
                return false;
            }
        });
    }

    function verificarOpcion(opcion) {
        if (opcion) {
            $('#coreModal').modal('hide');
            var myCollapse = document.getElementById('addExistenciasPanel');
            var bsCollapse = new bootstrap.Collapse(myCollapse, {
                hide: true,
            });
            $('#codigoAdd').val(sessionStorage.codigo);
            sessionStorage.clear();
        }
    }
</script>
<script type="text/javascript" title="cleave">
    var cleave = new Cleave( '.input-number', {
        numeral: true,
        numeralThousandsGroupStyle: 'thousand'
    });
</script>